on:
  workflow_dispatch:
  push:
    branches:
      - "main"
  pull_request:

jobs:
  build:
    uses: "rhinestonewtf/reusable-workflows/.github/workflows/forge-build.yaml@main"

  lint:
    needs: ["build"]
    uses: "rhinestonewtf/reusable-workflows/.github/workflows/forge-lint.yaml@main"

  test:
    needs: ["lint", "build"]
    uses: "rhinestonewtf/reusable-workflows/.github/workflows/forge-test.yaml@main"
    with:
      foundry-fuzz-runs: 5000
      foundry-profile: "test"
      match-path: "test/**/*.sol"

  test-simulate:
    needs: ["lint", "build"]
    uses: "rhinestonewtf/reusable-workflows/.github/workflows/forge-test-simulate.yaml@main"
    with:
      foundry-fuzz-runs: 5000
      foundry-profile: "test"
      match-path: "test/**/*.sol"

  release-artifacts:
    needs: ["build", "test"]
    uses: "rhinestonewtf/reusable-workflows/.github/workflows/forge-release.yaml@main"
    strategy:
      matrix:
        contract-name:
          [
            "AutoSavings",
            "ColdStorageFlashloan",
            "ColdStorageHook",
            "DeadmanSwitch",
            "HookMultiPlexer",
            "MultiFactor",
            "OwnableExecutor",
            "OwnableValidator",
            "RegistryHook",
            "SocialRecovery",
            "ScheduledOrders",
            "ScheduledTransfers",
          ]
    with:
      contract-name: ${{ matrix.contract-name }}
      store-artifacts: true
